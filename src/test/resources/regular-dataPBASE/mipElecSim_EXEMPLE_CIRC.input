
# Toutes données en SI sauf ANGLES EN DEGRES et DUREE EN JOURS

# Sorties de l'outil
# Attention a ne pas utiliser d'anti-slash (\) ou alors utiliser double antislash !
sorties.dossier_general_resultats = D:/DONNEES/mipElecSim/RES
sorties.sous_dossier_resultats = test
# prefixe des fichiers qui seront créés
sorties.prefixe = CIRC_V21
# prefixe des fichiers qui seront créés
sorties.plotSave = yes

# Satellite
satellite.mass = 3500.
satellite.sphericEquivArea = 80.0
# thermo-optical coefficients (ka, ks, kd)
satellite.RadiativeAbsorbed = 0.5
satellite.RadiativeSpecular = 0.5
satellite.RadiativeDiffused = 0.0
// Caractéristiques Propulsion électrique pour Mip
// 4 PPS5000 = valeurs suivantes en N et s.
satellite.elecThrust = 0.850
satellite.elecIsp = 1780
// Direction Poussee globale en repere satellite
satellite.elecDirInSatFrame.x = 1.
satellite.elecDirInSatFrame.y = 0.
satellite.elecDirInSatFrame.z = 0.

# Orbite initiale (GCRF). Angles en DEGRES
# MP4PsatBC_sma = 25778.e3; (Z=19400) 
initialOrbit.date = 2010-03-21T00:00:00.000
initialOrbit.a = 25778.e3
initialOrbit.e = 0.000
# Angles en DEGRES
initialOrbit.i = 7.0
initialOrbit.pom = 180.0
initialOrbit.gom = 0.
initialOrbit.M = 0.

# Nombre de phases de simulation  entre 1 et 3
simu.phasesNb = 1
# Duree maximale de simulation en JOURS. Si inj Excentrique alors arrêt sur e<1.e-3
simu.duration = 50
# Duree max de la phase 1 (utile si simu.phasesNb == 2 sans ph1SmaStop ou 3) en JOURS
simu.phase1.duration = 0
# Arret sur SMA pour la phase 1 (utilisé si non nul ET si 
# ((injection GTO ET simu.phasesNb == 2) OU (injection CIRC))
# Sinon arrêt phase 1 sur sa durée max.
simu.ph1SmaStop = 42164.e3
# Duree max de la phase 2 (utile si simu.phasesNb == 3) en JOURS
simu.phase2.duration = 0


# Attitude Ref = Velocity (TNW) ou Horizontal (QSW) ou Inertial (GCRF)
#                ou Circularise ou Apofix
# Orientation (psi, xsi) :
# Si attitude.ref = Velocity (TNW) ou Horizontal (QSW) :
#  psi = (-pitch) : T vers N.  ou : S vers -Q.
#  xsi = (elevation vers moment orbital W) 
#        ut (ou us)  = u cos(xsi) cos(psi)
#        un (ou -uq) = u cos(xsi) sin(psi)
#        uw (ou uw)  = u sin(xsi)
# Si attitude.ref = Apofix : direction de poussée annulant à tout instant 
# l'effet sur le rayon d'apogée; retournement à vitesse angulaire limitée
# près du périgée; biais supplémentaires psi et xsi.
# Si attitude.ref = Inertial :
#  psi = ascension droite X vers Y (place le Xsat dans GCRF)
#  xsi = elevation vers Zgcrf
# Si attitude.ref = Circularise :
#  Direction de poussee (Xsat) dans GCRF vers Apogee+Pi/2 en permanence
#  + biais supplémentaires suivants:
#  psi = ascension droite X vers Y
#  xsi = elevation vers Z
# ANGLES EN DEGRES
#
attitude.phase1.ref = Horizontal
attitude.phase1.psi = 0.
attitude.phase1.xsi = 0.
#
attitude.phase2.ref = Circularise
attitude.phase2.psi = 0.
attitude.phase2.xsi = 0.
#
attitude.phase3.ref = Velocity
attitude.phase3.psi = 0.
attitude.phase3.xsi = 0.

# Pointage GS vers soleil: Pris en compte si non-nul EN DEGRES
attitude.sunSAmaxIncidence = 23.0

# Depointage de référence pour correction inclinaison en DEGRES
# EOR inclination correction = -inclinationCorrectionRef * (r/sma) * cos(AoP+trueAnom)
# Horizontal ou Velocity : correction appliquée autour du vecteur
# +position exprimé dans le repère sat
# Inertial ou Circularise : correction appliquée autour du vecteur
# direction Apogée.
inclinationCorrectionRef = 50.
